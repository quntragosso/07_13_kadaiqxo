課題は２つあったので、
①Quixo(クイキシオ)
②users_manager(ユーザーデータベース管理ページ)
一応QUIXOは製品なので課題ファイル名ぼかしてます、すいません。

共通
functios.php→databaseに接続するための定型関数のみ記載。
sqlデータについては、今回はusers_tableとquixo_databaseを使っています。
user_databaseは関係ないです。似た名称があり、すいません。

②については特にUIにも手を加えず、
is_admin, is_deletedで検索をかけれるようにしています。
users_deleteは完全消去です。
input→登録ページ。
read→一覧ページ。POSTで受け取った値によって引っ張るデータ範囲を変更。ページ内にフォームを作成し、ソートするという形式。
create→変哲もないデータINSERT用のファイル。
delete→上記同様完全消去のDELETE実行ファイル。
edit→readページで指定したユーザー上書きするための情報入力用フォーム。
update→editで変更を加える箇所をUPDATEするファイル。


①QUIXOはもともとはボードゲームです。
5*5の盤上に無印or〇or×のコマを設置して縦横斜めのいずれかを揃えるゲームです。
２人用のゲームで交互に手番がきて、無印か自分の役(〇or×のどちらかを最初に決める)のコマいずれかを選択して、そのコマがあった縦方向or横方向のいずれかにおき、空いたスペースに向けてコマをスライドさせる・・・というルールです。文だと分かりにくいですね。

これを再現するように絶賛組んでいます。
lobby→ロビー用のファイル。途中データを全て読み込み表示し、そのgame_idをradioのvalueとしてPOSTします。新規作成の場合はvalueはnewgameとして送ります。
delete→getしたgame_idに関する情報を一括削除します。
game→取得したgame_idをデータベースから引っ張ってきて、それをもとにゲーム盤を作成します。newgameの場合一度新しいゲームとコマ情報全てをINSERTしてから再度取得を試みます。
jsで扱えるようにphp側でtableタグのtb要素にclassを入れていたり、game_idを変数として送っていたりなど。
update→jsからajaxで送られた情報をもとにコマ情報(というよりはマス目の情報ですね)をアップデートします。
js→コマをドラッグできるようにしたり、ドラッグした元やドロップ先の情報を変数としてupdate.phpに送ったり、マス目のstatusに合わせて背景を変える(コマのが無印か〇か×になる)処理をしています。

→現状
ドラッグ元とドロップ先のマス目情報をもとに、statusを変えないといけないマス目を取得するところまでできていて、あとは上下左右にのどの方向に動かしたかによってstatusの変更方法を指定する一般化のロジック組みと、その情報の再update、jsに渡してそれをマス目のclass情報に反映させる処理を行って、手番が交互に行われるようにできれば。。。という感じですが、一般化ロジックが難しいなと言ってる段階です。
書いてる途中で二度手間やってるのも気づいたので、簡易化もしないといけないです。ここまでで提出しています。

→third commit(2020/07/04,課題提出締め切り以降)
勝利判定は難しいので出ないが、一応プレイ可能なところまで完成。
と思ったら動作確認したと思ったらしてない部分があり、修正など。
